# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


class RPC(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class SubOpts(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        subscribe = ... # type: bool
        topicid = ... # type: typing___Text

        def __init__(self,
            *,
            subscribe : typing___Optional[bool] = None,
            topicid : typing___Optional[typing___Text] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> RPC.SubOpts: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"subscribe",u"topicid"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"subscribe",u"topicid"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"subscribe",b"subscribe",u"topicid",b"topicid"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"subscribe",b"subscribe",u"topicid",b"topicid"]) -> None: ...


    @property
    def subscriptions(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[RPC.SubOpts]: ...

    @property
    def publish(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[Message]: ...

    @property
    def control(self) -> ControlMessage: ...

    def __init__(self,
        *,
        subscriptions : typing___Optional[typing___Iterable[RPC.SubOpts]] = None,
        publish : typing___Optional[typing___Iterable[Message]] = None,
        control : typing___Optional[ControlMessage] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> RPC: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"control"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"control",u"publish",u"subscriptions"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"control",b"control"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"control",b"control",u"publish",b"publish",u"subscriptions",b"subscriptions"]) -> None: ...

class Message(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    from_id = ... # type: bytes
    data = ... # type: bytes
    seqno = ... # type: bytes
    topicIDs = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    signature = ... # type: bytes
    key = ... # type: bytes

    def __init__(self,
        *,
        from_id : typing___Optional[bytes] = None,
        data : typing___Optional[bytes] = None,
        seqno : typing___Optional[bytes] = None,
        topicIDs : typing___Optional[typing___Iterable[typing___Text]] = None,
        signature : typing___Optional[bytes] = None,
        key : typing___Optional[bytes] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Message: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"data",u"from_id",u"key",u"seqno",u"signature"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"data",u"from_id",u"key",u"seqno",u"signature",u"topicIDs"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"data",b"data",u"from_id",b"from_id",u"key",b"key",u"seqno",b"seqno",u"signature",b"signature"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"data",b"data",u"from_id",b"from_id",u"key",b"key",u"seqno",b"seqno",u"signature",b"signature",u"topicIDs",b"topicIDs"]) -> None: ...

class ControlMessage(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def ihave(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[ControlIHave]: ...

    @property
    def iwant(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[ControlIWant]: ...

    @property
    def graft(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[ControlGraft]: ...

    @property
    def prune(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[ControlPrune]: ...

    def __init__(self,
        *,
        ihave : typing___Optional[typing___Iterable[ControlIHave]] = None,
        iwant : typing___Optional[typing___Iterable[ControlIWant]] = None,
        graft : typing___Optional[typing___Iterable[ControlGraft]] = None,
        prune : typing___Optional[typing___Iterable[ControlPrune]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ControlMessage: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"graft",u"ihave",u"iwant",u"prune"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"graft",b"graft",u"ihave",b"ihave",u"iwant",b"iwant",u"prune",b"prune"]) -> None: ...

class ControlIHave(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    topicID = ... # type: typing___Text
    messageIDs = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]

    def __init__(self,
        *,
        topicID : typing___Optional[typing___Text] = None,
        messageIDs : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ControlIHave: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"topicID"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"messageIDs",u"topicID"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"topicID",b"topicID"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"messageIDs",b"messageIDs",u"topicID",b"topicID"]) -> None: ...

class ControlIWant(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    messageIDs = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]

    def __init__(self,
        *,
        messageIDs : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ControlIWant: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def ClearField(self, field_name: typing_extensions___Literal[u"messageIDs"]) -> None: ...
    else:
        def ClearField(self, field_name: typing_extensions___Literal[u"messageIDs",b"messageIDs"]) -> None: ...

class ControlGraft(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    topicID = ... # type: typing___Text

    def __init__(self,
        *,
        topicID : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ControlGraft: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"topicID"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"topicID"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"topicID",b"topicID"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"topicID",b"topicID"]) -> None: ...

class ControlPrune(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    topicID = ... # type: typing___Text

    def __init__(self,
        *,
        topicID : typing___Optional[typing___Text] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> ControlPrune: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"topicID"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"topicID"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"topicID",b"topicID"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"topicID",b"topicID"]) -> None: ...

class TopicDescriptor(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class AuthOpts(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class AuthMode(int):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            @classmethod
            def Name(cls, number: int) -> str: ...
            @classmethod
            def Value(cls, name: str) -> TopicDescriptor.AuthOpts.AuthMode: ...
            @classmethod
            def keys(cls) -> typing___List[str]: ...
            @classmethod
            def values(cls) -> typing___List[TopicDescriptor.AuthOpts.AuthMode]: ...
            @classmethod
            def items(cls) -> typing___List[typing___Tuple[str, TopicDescriptor.AuthOpts.AuthMode]]: ...
            NONE = typing___cast(TopicDescriptor.AuthOpts.AuthMode, 0)
            KEY = typing___cast(TopicDescriptor.AuthOpts.AuthMode, 1)
            WOT = typing___cast(TopicDescriptor.AuthOpts.AuthMode, 2)
        NONE = typing___cast(TopicDescriptor.AuthOpts.AuthMode, 0)
        KEY = typing___cast(TopicDescriptor.AuthOpts.AuthMode, 1)
        WOT = typing___cast(TopicDescriptor.AuthOpts.AuthMode, 2)

        mode = ... # type: TopicDescriptor.AuthOpts.AuthMode
        keys = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[bytes]

        def __init__(self,
            *,
            mode : typing___Optional[TopicDescriptor.AuthOpts.AuthMode] = None,
            keys : typing___Optional[typing___Iterable[bytes]] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> TopicDescriptor.AuthOpts: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"mode"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"keys",u"mode"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"mode",b"mode"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"keys",b"keys",u"mode",b"mode"]) -> None: ...

    class EncOpts(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class EncMode(int):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            @classmethod
            def Name(cls, number: int) -> str: ...
            @classmethod
            def Value(cls, name: str) -> TopicDescriptor.EncOpts.EncMode: ...
            @classmethod
            def keys(cls) -> typing___List[str]: ...
            @classmethod
            def values(cls) -> typing___List[TopicDescriptor.EncOpts.EncMode]: ...
            @classmethod
            def items(cls) -> typing___List[typing___Tuple[str, TopicDescriptor.EncOpts.EncMode]]: ...
            NONE = typing___cast(TopicDescriptor.EncOpts.EncMode, 0)
            SHAREDKEY = typing___cast(TopicDescriptor.EncOpts.EncMode, 1)
            WOT = typing___cast(TopicDescriptor.EncOpts.EncMode, 2)
        NONE = typing___cast(TopicDescriptor.EncOpts.EncMode, 0)
        SHAREDKEY = typing___cast(TopicDescriptor.EncOpts.EncMode, 1)
        WOT = typing___cast(TopicDescriptor.EncOpts.EncMode, 2)

        mode = ... # type: TopicDescriptor.EncOpts.EncMode
        keyHashes = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[bytes]

        def __init__(self,
            *,
            mode : typing___Optional[TopicDescriptor.EncOpts.EncMode] = None,
            keyHashes : typing___Optional[typing___Iterable[bytes]] = None,
            ) -> None: ...
        @classmethod
        def FromString(cls, s: bytes) -> TopicDescriptor.EncOpts: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        if sys.version_info >= (3,):
            def HasField(self, field_name: typing_extensions___Literal[u"mode"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"keyHashes",u"mode"]) -> None: ...
        else:
            def HasField(self, field_name: typing_extensions___Literal[u"mode",b"mode"]) -> bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"keyHashes",b"keyHashes",u"mode",b"mode"]) -> None: ...

    name = ... # type: typing___Text

    @property
    def auth(self) -> TopicDescriptor.AuthOpts: ...

    @property
    def enc(self) -> TopicDescriptor.EncOpts: ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        auth : typing___Optional[TopicDescriptor.AuthOpts] = None,
        enc : typing___Optional[TopicDescriptor.EncOpts] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> TopicDescriptor: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"auth",u"enc",u"name"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"auth",u"enc",u"name"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"auth",b"auth",u"enc",b"enc",u"name",b"name"]) -> bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"auth",b"auth",u"enc",b"enc",u"name",b"name"]) -> None: ...
