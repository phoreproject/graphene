// This is for P2P
syntax = "proto3";

//import "common.proto";

package pb;

message VersionMessage {
    uint64 Version = 1;
    bytes PeerID = 2;
    bytes PeerInfo = 3;
    bytes GenesisHash = 4;
    uint64 Height = 5;
}

message PingMessage {
    uint64 Nonce = 1;
}

message PongMessage {
    uint64 Nonce = 1;
}

message RejectMessage {
    string Message = 1;
}

message AttestationMempoolItem {
    bytes AttestationHash = 1;
    bytes Participation = 2;
}

// This will advertise which mempool items the client needs/has.
message GetMempoolMessage {
    repeated AttestationMempoolItem Attestations = 1;
}

message GetBlockMessage {
    repeated bytes LocatorHashes = 1; //block locator object; newest back to genesis block (dense to start, but then sparse)
    bytes HashStop = 2; //hash of the last desired block header; set to zero to get as many blocks as possible (2000)
}

message MempoolMessage {
    repeated bytes AttestationHashes = 1;
}

// Response to GetBlockMessage
message BlockMessage {
    repeated string BlockPaths = 1;
    bytes LatestBlockHash = 2;
}

message GetDataMessage {
    repeated bytes DataHash = 1;
}

message DataMessage {
    repeated bytes Data = 2;
}

message GetAddrMessage {}

message AddrMessage {
    repeated bytes Addrs = 1;
}

