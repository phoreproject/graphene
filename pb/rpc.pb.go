// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Role int32

const (
	Role_ATTESTER Role = 0
	Role_PROPOSER Role = 1
)

var Role_name = map[int32]string{
	0: "ATTESTER",
	1: "PROPOSER",
}
var Role_value = map[string]int32{
	"ATTESTER": 0,
	"PROPOSER": 1,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}
func (Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{0}
}

type GetBlockRequest struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockRequest) Reset()         { *m = GetBlockRequest{} }
func (m *GetBlockRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockRequest) ProtoMessage()    {}
func (*GetBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{0}
}
func (m *GetBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockRequest.Unmarshal(m, b)
}
func (m *GetBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockRequest.Merge(dst, src)
}
func (m *GetBlockRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockRequest.Size(m)
}
func (m *GetBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockRequest proto.InternalMessageInfo

func (m *GetBlockRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type GetBlockResponse struct {
	Block                *Block   `protobuf:"bytes,1,opt,name=Block,proto3" json:"Block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockResponse) Reset()         { *m = GetBlockResponse{} }
func (m *GetBlockResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockResponse) ProtoMessage()    {}
func (*GetBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{1}
}
func (m *GetBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockResponse.Unmarshal(m, b)
}
func (m *GetBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockResponse.Merge(dst, src)
}
func (m *GetBlockResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockResponse.Size(m)
}
func (m *GetBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockResponse proto.InternalMessageInfo

func (m *GetBlockResponse) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type GetProposerForSlotRequest struct {
	Slot                 uint64   `protobuf:"varint,1,opt,name=Slot,proto3" json:"Slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProposerForSlotRequest) Reset()         { *m = GetProposerForSlotRequest{} }
func (m *GetProposerForSlotRequest) String() string { return proto.CompactTextString(m) }
func (*GetProposerForSlotRequest) ProtoMessage()    {}
func (*GetProposerForSlotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{2}
}
func (m *GetProposerForSlotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProposerForSlotRequest.Unmarshal(m, b)
}
func (m *GetProposerForSlotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProposerForSlotRequest.Marshal(b, m, deterministic)
}
func (dst *GetProposerForSlotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProposerForSlotRequest.Merge(dst, src)
}
func (m *GetProposerForSlotRequest) XXX_Size() int {
	return xxx_messageInfo_GetProposerForSlotRequest.Size(m)
}
func (m *GetProposerForSlotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProposerForSlotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProposerForSlotRequest proto.InternalMessageInfo

func (m *GetProposerForSlotRequest) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

type GetProposerForSlotResponse struct {
	Proposer             uint32   `protobuf:"varint,2,opt,name=Proposer,proto3" json:"Proposer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProposerForSlotResponse) Reset()         { *m = GetProposerForSlotResponse{} }
func (m *GetProposerForSlotResponse) String() string { return proto.CompactTextString(m) }
func (*GetProposerForSlotResponse) ProtoMessage()    {}
func (*GetProposerForSlotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{3}
}
func (m *GetProposerForSlotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProposerForSlotResponse.Unmarshal(m, b)
}
func (m *GetProposerForSlotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProposerForSlotResponse.Marshal(b, m, deterministic)
}
func (dst *GetProposerForSlotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProposerForSlotResponse.Merge(dst, src)
}
func (m *GetProposerForSlotResponse) XXX_Size() int {
	return xxx_messageInfo_GetProposerForSlotResponse.Size(m)
}
func (m *GetProposerForSlotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProposerForSlotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProposerForSlotResponse proto.InternalMessageInfo

func (m *GetProposerForSlotResponse) GetProposer() uint32 {
	if m != nil {
		return m.Proposer
	}
	return 0
}

type EpochInformation struct {
	Slots                []*SlotInformation `protobuf:"bytes,1,rep,name=Slots,proto3" json:"Slots,omitempty"`
	Slot                 int64              `protobuf:"varint,3,opt,name=Slot,proto3" json:"Slot,omitempty"`
	EpochBoundaryRoot    []byte             `protobuf:"bytes,4,opt,name=EpochBoundaryRoot,proto3" json:"EpochBoundaryRoot,omitempty"`
	LatestCrosslinks     []*Crosslink       `protobuf:"bytes,5,rep,name=LatestCrosslinks,proto3" json:"LatestCrosslinks,omitempty"`
	JustifiedSlot        uint64             `protobuf:"varint,6,opt,name=JustifiedSlot,proto3" json:"JustifiedSlot,omitempty"`
	JustifiedHash        []byte             `protobuf:"bytes,7,opt,name=JustifiedHash,proto3" json:"JustifiedHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EpochInformation) Reset()         { *m = EpochInformation{} }
func (m *EpochInformation) String() string { return proto.CompactTextString(m) }
func (*EpochInformation) ProtoMessage()    {}
func (*EpochInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{4}
}
func (m *EpochInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EpochInformation.Unmarshal(m, b)
}
func (m *EpochInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EpochInformation.Marshal(b, m, deterministic)
}
func (dst *EpochInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EpochInformation.Merge(dst, src)
}
func (m *EpochInformation) XXX_Size() int {
	return xxx_messageInfo_EpochInformation.Size(m)
}
func (m *EpochInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_EpochInformation.DiscardUnknown(m)
}

var xxx_messageInfo_EpochInformation proto.InternalMessageInfo

func (m *EpochInformation) GetSlots() []*SlotInformation {
	if m != nil {
		return m.Slots
	}
	return nil
}

func (m *EpochInformation) GetSlot() int64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *EpochInformation) GetEpochBoundaryRoot() []byte {
	if m != nil {
		return m.EpochBoundaryRoot
	}
	return nil
}

func (m *EpochInformation) GetLatestCrosslinks() []*Crosslink {
	if m != nil {
		return m.LatestCrosslinks
	}
	return nil
}

func (m *EpochInformation) GetJustifiedSlot() uint64 {
	if m != nil {
		return m.JustifiedSlot
	}
	return 0
}

func (m *EpochInformation) GetJustifiedHash() []byte {
	if m != nil {
		return m.JustifiedHash
	}
	return nil
}

type SlotInformation struct {
	Slot                 int64             `protobuf:"varint,1,opt,name=Slot,proto3" json:"Slot,omitempty"`
	Committees           []*ShardCommittee `protobuf:"bytes,2,rep,name=Committees,proto3" json:"Committees,omitempty"`
	ProposeAt            uint64            `protobuf:"varint,3,opt,name=ProposeAt,proto3" json:"ProposeAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SlotInformation) Reset()         { *m = SlotInformation{} }
func (m *SlotInformation) String() string { return proto.CompactTextString(m) }
func (*SlotInformation) ProtoMessage()    {}
func (*SlotInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{5}
}
func (m *SlotInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlotInformation.Unmarshal(m, b)
}
func (m *SlotInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlotInformation.Marshal(b, m, deterministic)
}
func (dst *SlotInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlotInformation.Merge(dst, src)
}
func (m *SlotInformation) XXX_Size() int {
	return xxx_messageInfo_SlotInformation.Size(m)
}
func (m *SlotInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_SlotInformation.DiscardUnknown(m)
}

var xxx_messageInfo_SlotInformation proto.InternalMessageInfo

func (m *SlotInformation) GetSlot() int64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *SlotInformation) GetCommittees() []*ShardCommittee {
	if m != nil {
		return m.Committees
	}
	return nil
}

func (m *SlotInformation) GetProposeAt() uint64 {
	if m != nil {
		return m.ProposeAt
	}
	return 0
}

type DisconnectResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectResponse) Reset()         { *m = DisconnectResponse{} }
func (m *DisconnectResponse) String() string { return proto.CompactTextString(m) }
func (*DisconnectResponse) ProtoMessage()    {}
func (*DisconnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{6}
}
func (m *DisconnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectResponse.Unmarshal(m, b)
}
func (m *DisconnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectResponse.Marshal(b, m, deterministic)
}
func (dst *DisconnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectResponse.Merge(dst, src)
}
func (m *DisconnectResponse) XXX_Size() int {
	return xxx_messageInfo_DisconnectResponse.Size(m)
}
func (m *DisconnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectResponse proto.InternalMessageInfo

func (m *DisconnectResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type GetCommitteesForSlotRequest struct {
	Slot                 uint64   `protobuf:"varint,1,opt,name=Slot,proto3" json:"Slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommitteesForSlotRequest) Reset()         { *m = GetCommitteesForSlotRequest{} }
func (m *GetCommitteesForSlotRequest) String() string { return proto.CompactTextString(m) }
func (*GetCommitteesForSlotRequest) ProtoMessage()    {}
func (*GetCommitteesForSlotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{7}
}
func (m *GetCommitteesForSlotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitteesForSlotRequest.Unmarshal(m, b)
}
func (m *GetCommitteesForSlotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitteesForSlotRequest.Marshal(b, m, deterministic)
}
func (dst *GetCommitteesForSlotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitteesForSlotRequest.Merge(dst, src)
}
func (m *GetCommitteesForSlotRequest) XXX_Size() int {
	return xxx_messageInfo_GetCommitteesForSlotRequest.Size(m)
}
func (m *GetCommitteesForSlotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitteesForSlotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitteesForSlotRequest proto.InternalMessageInfo

func (m *GetCommitteesForSlotRequest) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

type GetSlotAndShardAssignmentRequest struct {
	ValidatorID          uint32   `protobuf:"varint,1,opt,name=ValidatorID,proto3" json:"ValidatorID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSlotAndShardAssignmentRequest) Reset()         { *m = GetSlotAndShardAssignmentRequest{} }
func (m *GetSlotAndShardAssignmentRequest) String() string { return proto.CompactTextString(m) }
func (*GetSlotAndShardAssignmentRequest) ProtoMessage()    {}
func (*GetSlotAndShardAssignmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{8}
}
func (m *GetSlotAndShardAssignmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSlotAndShardAssignmentRequest.Unmarshal(m, b)
}
func (m *GetSlotAndShardAssignmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSlotAndShardAssignmentRequest.Marshal(b, m, deterministic)
}
func (dst *GetSlotAndShardAssignmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSlotAndShardAssignmentRequest.Merge(dst, src)
}
func (m *GetSlotAndShardAssignmentRequest) XXX_Size() int {
	return xxx_messageInfo_GetSlotAndShardAssignmentRequest.Size(m)
}
func (m *GetSlotAndShardAssignmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSlotAndShardAssignmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSlotAndShardAssignmentRequest proto.InternalMessageInfo

func (m *GetSlotAndShardAssignmentRequest) GetValidatorID() uint32 {
	if m != nil {
		return m.ValidatorID
	}
	return 0
}

type SlotAndShardAssignment struct {
	ShardID              uint32   `protobuf:"varint,1,opt,name=ShardID,proto3" json:"ShardID,omitempty"`
	Slot                 uint64   `protobuf:"varint,2,opt,name=Slot,proto3" json:"Slot,omitempty"`
	Role                 Role     `protobuf:"varint,3,opt,name=Role,proto3,enum=pb.Role" json:"Role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlotAndShardAssignment) Reset()         { *m = SlotAndShardAssignment{} }
func (m *SlotAndShardAssignment) String() string { return proto.CompactTextString(m) }
func (*SlotAndShardAssignment) ProtoMessage()    {}
func (*SlotAndShardAssignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{9}
}
func (m *SlotAndShardAssignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlotAndShardAssignment.Unmarshal(m, b)
}
func (m *SlotAndShardAssignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlotAndShardAssignment.Marshal(b, m, deterministic)
}
func (dst *SlotAndShardAssignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlotAndShardAssignment.Merge(dst, src)
}
func (m *SlotAndShardAssignment) XXX_Size() int {
	return xxx_messageInfo_SlotAndShardAssignment.Size(m)
}
func (m *SlotAndShardAssignment) XXX_DiscardUnknown() {
	xxx_messageInfo_SlotAndShardAssignment.DiscardUnknown(m)
}

var xxx_messageInfo_SlotAndShardAssignment proto.InternalMessageInfo

func (m *SlotAndShardAssignment) GetShardID() uint32 {
	if m != nil {
		return m.ShardID
	}
	return 0
}

func (m *SlotAndShardAssignment) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *SlotAndShardAssignment) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_ATTESTER
}

type SubmitBlockRequest struct {
	Block                *Block   `protobuf:"bytes,1,opt,name=Block,proto3" json:"Block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitBlockRequest) Reset()         { *m = SubmitBlockRequest{} }
func (m *SubmitBlockRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitBlockRequest) ProtoMessage()    {}
func (*SubmitBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{10}
}
func (m *SubmitBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitBlockRequest.Unmarshal(m, b)
}
func (m *SubmitBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitBlockRequest.Marshal(b, m, deterministic)
}
func (dst *SubmitBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitBlockRequest.Merge(dst, src)
}
func (m *SubmitBlockRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitBlockRequest.Size(m)
}
func (m *SubmitBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitBlockRequest proto.InternalMessageInfo

func (m *SubmitBlockRequest) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type SubmitBlockResponse struct {
	BlockHash            []byte   `protobuf:"bytes,1,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitBlockResponse) Reset()         { *m = SubmitBlockResponse{} }
func (m *SubmitBlockResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitBlockResponse) ProtoMessage()    {}
func (*SubmitBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{11}
}
func (m *SubmitBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitBlockResponse.Unmarshal(m, b)
}
func (m *SubmitBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitBlockResponse.Marshal(b, m, deterministic)
}
func (dst *SubmitBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitBlockResponse.Merge(dst, src)
}
func (m *SubmitBlockResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitBlockResponse.Size(m)
}
func (m *SubmitBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitBlockResponse proto.InternalMessageInfo

func (m *SubmitBlockResponse) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

type SlotNumberResponse struct {
	SlotNumber           uint64   `protobuf:"varint,1,opt,name=SlotNumber,proto3" json:"SlotNumber,omitempty"`
	BlockHash            []byte   `protobuf:"bytes,2,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlotNumberResponse) Reset()         { *m = SlotNumberResponse{} }
func (m *SlotNumberResponse) String() string { return proto.CompactTextString(m) }
func (*SlotNumberResponse) ProtoMessage()    {}
func (*SlotNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{12}
}
func (m *SlotNumberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlotNumberResponse.Unmarshal(m, b)
}
func (m *SlotNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlotNumberResponse.Marshal(b, m, deterministic)
}
func (dst *SlotNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlotNumberResponse.Merge(dst, src)
}
func (m *SlotNumberResponse) XXX_Size() int {
	return xxx_messageInfo_SlotNumberResponse.Size(m)
}
func (m *SlotNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SlotNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SlotNumberResponse proto.InternalMessageInfo

func (m *SlotNumberResponse) GetSlotNumber() uint64 {
	if m != nil {
		return m.SlotNumber
	}
	return 0
}

func (m *SlotNumberResponse) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

type GetBlockHashRequest struct {
	SlotNumber           uint64   `protobuf:"varint,1,opt,name=SlotNumber,proto3" json:"SlotNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockHashRequest) Reset()         { *m = GetBlockHashRequest{} }
func (m *GetBlockHashRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockHashRequest) ProtoMessage()    {}
func (*GetBlockHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{13}
}
func (m *GetBlockHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockHashRequest.Unmarshal(m, b)
}
func (m *GetBlockHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockHashRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockHashRequest.Merge(dst, src)
}
func (m *GetBlockHashRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockHashRequest.Size(m)
}
func (m *GetBlockHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockHashRequest proto.InternalMessageInfo

func (m *GetBlockHashRequest) GetSlotNumber() uint64 {
	if m != nil {
		return m.SlotNumber
	}
	return 0
}

type GetBlockHashResponse struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockHashResponse) Reset()         { *m = GetBlockHashResponse{} }
func (m *GetBlockHashResponse) String() string { return proto.CompactTextString(m) }
func (*GetBlockHashResponse) ProtoMessage()    {}
func (*GetBlockHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{14}
}
func (m *GetBlockHashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockHashResponse.Unmarshal(m, b)
}
func (m *GetBlockHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockHashResponse.Marshal(b, m, deterministic)
}
func (dst *GetBlockHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockHashResponse.Merge(dst, src)
}
func (m *GetBlockHashResponse) XXX_Size() int {
	return xxx_messageInfo_GetBlockHashResponse.Size(m)
}
func (m *GetBlockHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockHashResponse proto.InternalMessageInfo

func (m *GetBlockHashResponse) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type GetValidatorAtIndexRequest struct {
	Index                uint32   `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetValidatorAtIndexRequest) Reset()         { *m = GetValidatorAtIndexRequest{} }
func (m *GetValidatorAtIndexRequest) String() string { return proto.CompactTextString(m) }
func (*GetValidatorAtIndexRequest) ProtoMessage()    {}
func (*GetValidatorAtIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{15}
}
func (m *GetValidatorAtIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetValidatorAtIndexRequest.Unmarshal(m, b)
}
func (m *GetValidatorAtIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetValidatorAtIndexRequest.Marshal(b, m, deterministic)
}
func (dst *GetValidatorAtIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetValidatorAtIndexRequest.Merge(dst, src)
}
func (m *GetValidatorAtIndexRequest) XXX_Size() int {
	return xxx_messageInfo_GetValidatorAtIndexRequest.Size(m)
}
func (m *GetValidatorAtIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetValidatorAtIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetValidatorAtIndexRequest proto.InternalMessageInfo

func (m *GetValidatorAtIndexRequest) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type GetValidatorAtIndexResponse struct {
	Validator            *Validator `protobuf:"bytes,1,opt,name=Validator,proto3" json:"Validator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetValidatorAtIndexResponse) Reset()         { *m = GetValidatorAtIndexResponse{} }
func (m *GetValidatorAtIndexResponse) String() string { return proto.CompactTextString(m) }
func (*GetValidatorAtIndexResponse) ProtoMessage()    {}
func (*GetValidatorAtIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{16}
}
func (m *GetValidatorAtIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetValidatorAtIndexResponse.Unmarshal(m, b)
}
func (m *GetValidatorAtIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetValidatorAtIndexResponse.Marshal(b, m, deterministic)
}
func (dst *GetValidatorAtIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetValidatorAtIndexResponse.Merge(dst, src)
}
func (m *GetValidatorAtIndexResponse) XXX_Size() int {
	return xxx_messageInfo_GetValidatorAtIndexResponse.Size(m)
}
func (m *GetValidatorAtIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetValidatorAtIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetValidatorAtIndexResponse proto.InternalMessageInfo

func (m *GetValidatorAtIndexResponse) GetValidator() *Validator {
	if m != nil {
		return m.Validator
	}
	return nil
}

type GetCommitteeValidatorsRequest struct {
	SlotNumber           uint64   `protobuf:"varint,1,opt,name=SlotNumber,proto3" json:"SlotNumber,omitempty"`
	Shard                uint32   `protobuf:"varint,2,opt,name=Shard,proto3" json:"Shard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommitteeValidatorsRequest) Reset()         { *m = GetCommitteeValidatorsRequest{} }
func (m *GetCommitteeValidatorsRequest) String() string { return proto.CompactTextString(m) }
func (*GetCommitteeValidatorsRequest) ProtoMessage()    {}
func (*GetCommitteeValidatorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{17}
}
func (m *GetCommitteeValidatorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitteeValidatorsRequest.Unmarshal(m, b)
}
func (m *GetCommitteeValidatorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitteeValidatorsRequest.Marshal(b, m, deterministic)
}
func (dst *GetCommitteeValidatorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitteeValidatorsRequest.Merge(dst, src)
}
func (m *GetCommitteeValidatorsRequest) XXX_Size() int {
	return xxx_messageInfo_GetCommitteeValidatorsRequest.Size(m)
}
func (m *GetCommitteeValidatorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitteeValidatorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitteeValidatorsRequest proto.InternalMessageInfo

func (m *GetCommitteeValidatorsRequest) GetSlotNumber() uint64 {
	if m != nil {
		return m.SlotNumber
	}
	return 0
}

func (m *GetCommitteeValidatorsRequest) GetShard() uint32 {
	if m != nil {
		return m.Shard
	}
	return 0
}

type GetStateResponse struct {
	State                *State   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateResponse) Reset()         { *m = GetStateResponse{} }
func (m *GetStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetStateResponse) ProtoMessage()    {}
func (*GetStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{18}
}
func (m *GetStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateResponse.Unmarshal(m, b)
}
func (m *GetStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateResponse.Marshal(b, m, deterministic)
}
func (dst *GetStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateResponse.Merge(dst, src)
}
func (m *GetStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetStateResponse.Size(m)
}
func (m *GetStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateResponse proto.InternalMessageInfo

func (m *GetStateResponse) GetState() *State {
	if m != nil {
		return m.State
	}
	return nil
}

type GetStateRootResponse struct {
	StateRoot            []byte   `protobuf:"bytes,1,opt,name=StateRoot,proto3" json:"StateRoot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateRootResponse) Reset()         { *m = GetStateRootResponse{} }
func (m *GetStateRootResponse) String() string { return proto.CompactTextString(m) }
func (*GetStateRootResponse) ProtoMessage()    {}
func (*GetStateRootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{19}
}
func (m *GetStateRootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateRootResponse.Unmarshal(m, b)
}
func (m *GetStateRootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateRootResponse.Marshal(b, m, deterministic)
}
func (dst *GetStateRootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateRootResponse.Merge(dst, src)
}
func (m *GetStateRootResponse) XXX_Size() int {
	return xxx_messageInfo_GetStateRootResponse.Size(m)
}
func (m *GetStateRootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateRootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateRootResponse proto.InternalMessageInfo

func (m *GetStateRootResponse) GetStateRoot() []byte {
	if m != nil {
		return m.StateRoot
	}
	return nil
}

type GetCommitteeValidatorsResponse struct {
	Validators           []*Validator `protobuf:"bytes,1,rep,name=Validators,proto3" json:"Validators,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetCommitteeValidatorsResponse) Reset()         { *m = GetCommitteeValidatorsResponse{} }
func (m *GetCommitteeValidatorsResponse) String() string { return proto.CompactTextString(m) }
func (*GetCommitteeValidatorsResponse) ProtoMessage()    {}
func (*GetCommitteeValidatorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{20}
}
func (m *GetCommitteeValidatorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitteeValidatorsResponse.Unmarshal(m, b)
}
func (m *GetCommitteeValidatorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitteeValidatorsResponse.Marshal(b, m, deterministic)
}
func (dst *GetCommitteeValidatorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitteeValidatorsResponse.Merge(dst, src)
}
func (m *GetCommitteeValidatorsResponse) XXX_Size() int {
	return xxx_messageInfo_GetCommitteeValidatorsResponse.Size(m)
}
func (m *GetCommitteeValidatorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitteeValidatorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitteeValidatorsResponse proto.InternalMessageInfo

func (m *GetCommitteeValidatorsResponse) GetValidators() []*Validator {
	if m != nil {
		return m.Validators
	}
	return nil
}

type GetCommitteeValidatorIndicesResponse struct {
	Validators           []uint32 `protobuf:"varint,1,rep,packed,name=Validators,proto3" json:"Validators,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommitteeValidatorIndicesResponse) Reset()         { *m = GetCommitteeValidatorIndicesResponse{} }
func (m *GetCommitteeValidatorIndicesResponse) String() string { return proto.CompactTextString(m) }
func (*GetCommitteeValidatorIndicesResponse) ProtoMessage()    {}
func (*GetCommitteeValidatorIndicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_8e045a077a7c46b9, []int{21}
}
func (m *GetCommitteeValidatorIndicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitteeValidatorIndicesResponse.Unmarshal(m, b)
}
func (m *GetCommitteeValidatorIndicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitteeValidatorIndicesResponse.Marshal(b, m, deterministic)
}
func (dst *GetCommitteeValidatorIndicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitteeValidatorIndicesResponse.Merge(dst, src)
}
func (m *GetCommitteeValidatorIndicesResponse) XXX_Size() int {
	return xxx_messageInfo_GetCommitteeValidatorIndicesResponse.Size(m)
}
func (m *GetCommitteeValidatorIndicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitteeValidatorIndicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitteeValidatorIndicesResponse proto.InternalMessageInfo

func (m *GetCommitteeValidatorIndicesResponse) GetValidators() []uint32 {
	if m != nil {
		return m.Validators
	}
	return nil
}

func init() {
	proto.RegisterType((*GetBlockRequest)(nil), "pb.GetBlockRequest")
	proto.RegisterType((*GetBlockResponse)(nil), "pb.GetBlockResponse")
	proto.RegisterType((*GetProposerForSlotRequest)(nil), "pb.GetProposerForSlotRequest")
	proto.RegisterType((*GetProposerForSlotResponse)(nil), "pb.GetProposerForSlotResponse")
	proto.RegisterType((*EpochInformation)(nil), "pb.EpochInformation")
	proto.RegisterType((*SlotInformation)(nil), "pb.SlotInformation")
	proto.RegisterType((*DisconnectResponse)(nil), "pb.DisconnectResponse")
	proto.RegisterType((*GetCommitteesForSlotRequest)(nil), "pb.GetCommitteesForSlotRequest")
	proto.RegisterType((*GetSlotAndShardAssignmentRequest)(nil), "pb.GetSlotAndShardAssignmentRequest")
	proto.RegisterType((*SlotAndShardAssignment)(nil), "pb.SlotAndShardAssignment")
	proto.RegisterType((*SubmitBlockRequest)(nil), "pb.SubmitBlockRequest")
	proto.RegisterType((*SubmitBlockResponse)(nil), "pb.SubmitBlockResponse")
	proto.RegisterType((*SlotNumberResponse)(nil), "pb.SlotNumberResponse")
	proto.RegisterType((*GetBlockHashRequest)(nil), "pb.GetBlockHashRequest")
	proto.RegisterType((*GetBlockHashResponse)(nil), "pb.GetBlockHashResponse")
	proto.RegisterType((*GetValidatorAtIndexRequest)(nil), "pb.GetValidatorAtIndexRequest")
	proto.RegisterType((*GetValidatorAtIndexResponse)(nil), "pb.GetValidatorAtIndexResponse")
	proto.RegisterType((*GetCommitteeValidatorsRequest)(nil), "pb.GetCommitteeValidatorsRequest")
	proto.RegisterType((*GetStateResponse)(nil), "pb.GetStateResponse")
	proto.RegisterType((*GetStateRootResponse)(nil), "pb.GetStateRootResponse")
	proto.RegisterType((*GetCommitteeValidatorsResponse)(nil), "pb.GetCommitteeValidatorsResponse")
	proto.RegisterType((*GetCommitteeValidatorIndicesResponse)(nil), "pb.GetCommitteeValidatorIndicesResponse")
	proto.RegisterEnum("pb.Role", Role_name, Role_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlockchainRPCClient is the client API for BlockchainRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockchainRPCClient interface {
	SubmitBlock(ctx context.Context, in *SubmitBlockRequest, opts ...grpc.CallOption) (*SubmitBlockResponse, error)
	GetSlotNumber(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SlotNumberResponse, error)
	GetBlockHash(ctx context.Context, in *GetBlockHashRequest, opts ...grpc.CallOption) (*GetBlockHashResponse, error)
	GetLastBlockHash(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetBlockHashResponse, error)
	GetState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetStateResponse, error)
	GetStateRoot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetStateRootResponse, error)
	GetEpochInformation(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*EpochInformation, error)
	GetForkData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ForkData, error)
	GetProposerForSlot(ctx context.Context, in *GetProposerForSlotRequest, opts ...grpc.CallOption) (*GetProposerForSlotResponse, error)
	GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error)
	SubmitAttestation(ctx context.Context, in *Attestation, opts ...grpc.CallOption) (*empty.Empty, error)
	GetMempool(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*BlockBody, error)
}

type blockchainRPCClient struct {
	cc *grpc.ClientConn
}

func NewBlockchainRPCClient(cc *grpc.ClientConn) BlockchainRPCClient {
	return &blockchainRPCClient{cc}
}

func (c *blockchainRPCClient) SubmitBlock(ctx context.Context, in *SubmitBlockRequest, opts ...grpc.CallOption) (*SubmitBlockResponse, error) {
	out := new(SubmitBlockResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/SubmitBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetSlotNumber(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SlotNumberResponse, error) {
	out := new(SlotNumberResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetSlotNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetBlockHash(ctx context.Context, in *GetBlockHashRequest, opts ...grpc.CallOption) (*GetBlockHashResponse, error) {
	out := new(GetBlockHashResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetBlockHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetLastBlockHash(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetBlockHashResponse, error) {
	out := new(GetBlockHashResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetLastBlockHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetStateResponse, error) {
	out := new(GetStateResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetStateRoot(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetStateRootResponse, error) {
	out := new(GetStateRootResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetStateRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetEpochInformation(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*EpochInformation, error) {
	out := new(EpochInformation)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetEpochInformation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetForkData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ForkData, error) {
	out := new(ForkData)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetForkData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetProposerForSlot(ctx context.Context, in *GetProposerForSlotRequest, opts ...grpc.CallOption) (*GetProposerForSlotResponse, error) {
	out := new(GetProposerForSlotResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetProposerForSlot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) SubmitAttestation(ctx context.Context, in *Attestation, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/SubmitAttestation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainRPCClient) GetMempool(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*BlockBody, error) {
	out := new(BlockBody)
	err := c.cc.Invoke(ctx, "/pb.BlockchainRPC/GetMempool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockchainRPCServer is the server API for BlockchainRPC service.
type BlockchainRPCServer interface {
	SubmitBlock(context.Context, *SubmitBlockRequest) (*SubmitBlockResponse, error)
	GetSlotNumber(context.Context, *empty.Empty) (*SlotNumberResponse, error)
	GetBlockHash(context.Context, *GetBlockHashRequest) (*GetBlockHashResponse, error)
	GetLastBlockHash(context.Context, *empty.Empty) (*GetBlockHashResponse, error)
	GetState(context.Context, *empty.Empty) (*GetStateResponse, error)
	GetStateRoot(context.Context, *empty.Empty) (*GetStateRootResponse, error)
	GetEpochInformation(context.Context, *empty.Empty) (*EpochInformation, error)
	GetForkData(context.Context, *empty.Empty) (*ForkData, error)
	GetProposerForSlot(context.Context, *GetProposerForSlotRequest) (*GetProposerForSlotResponse, error)
	GetBlock(context.Context, *GetBlockRequest) (*GetBlockResponse, error)
	SubmitAttestation(context.Context, *Attestation) (*empty.Empty, error)
	GetMempool(context.Context, *empty.Empty) (*BlockBody, error)
}

func RegisterBlockchainRPCServer(s *grpc.Server, srv BlockchainRPCServer) {
	s.RegisterService(&_BlockchainRPC_serviceDesc, srv)
}

func _BlockchainRPC_SubmitBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).SubmitBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/SubmitBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).SubmitBlock(ctx, req.(*SubmitBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetSlotNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetSlotNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetSlotNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetSlotNumber(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetBlockHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetBlockHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetBlockHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetBlockHash(ctx, req.(*GetBlockHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetLastBlockHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetLastBlockHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetLastBlockHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetLastBlockHash(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetState(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetStateRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetStateRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetStateRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetStateRoot(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetEpochInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetEpochInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetEpochInformation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetEpochInformation(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetForkData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetForkData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetForkData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetForkData(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetProposerForSlot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProposerForSlotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetProposerForSlot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetProposerForSlot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetProposerForSlot(ctx, req.(*GetProposerForSlotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetBlock(ctx, req.(*GetBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_SubmitAttestation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Attestation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).SubmitAttestation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/SubmitAttestation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).SubmitAttestation(ctx, req.(*Attestation))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockchainRPC_GetMempool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainRPCServer).GetMempool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlockchainRPC/GetMempool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainRPCServer).GetMempool(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockchainRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.BlockchainRPC",
	HandlerType: (*BlockchainRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitBlock",
			Handler:    _BlockchainRPC_SubmitBlock_Handler,
		},
		{
			MethodName: "GetSlotNumber",
			Handler:    _BlockchainRPC_GetSlotNumber_Handler,
		},
		{
			MethodName: "GetBlockHash",
			Handler:    _BlockchainRPC_GetBlockHash_Handler,
		},
		{
			MethodName: "GetLastBlockHash",
			Handler:    _BlockchainRPC_GetLastBlockHash_Handler,
		},
		{
			MethodName: "GetState",
			Handler:    _BlockchainRPC_GetState_Handler,
		},
		{
			MethodName: "GetStateRoot",
			Handler:    _BlockchainRPC_GetStateRoot_Handler,
		},
		{
			MethodName: "GetEpochInformation",
			Handler:    _BlockchainRPC_GetEpochInformation_Handler,
		},
		{
			MethodName: "GetForkData",
			Handler:    _BlockchainRPC_GetForkData_Handler,
		},
		{
			MethodName: "GetProposerForSlot",
			Handler:    _BlockchainRPC_GetProposerForSlot_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _BlockchainRPC_GetBlock_Handler,
		},
		{
			MethodName: "SubmitAttestation",
			Handler:    _BlockchainRPC_SubmitAttestation_Handler,
		},
		{
			MethodName: "GetMempool",
			Handler:    _BlockchainRPC_GetMempool_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_rpc_8e045a077a7c46b9) }

var fileDescriptor_rpc_8e045a077a7c46b9 = []byte{
	// 910 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0x5f, 0x6f, 0xe3, 0x44,
	0x10, 0x27, 0x69, 0xda, 0x4b, 0x26, 0x09, 0xcd, 0x6d, 0xab, 0x12, 0x72, 0xbd, 0x12, 0xad, 0x0e,
	0xa9, 0x1c, 0x90, 0x8a, 0x84, 0x4a, 0x87, 0x84, 0x80, 0xb4, 0x49, 0x43, 0x4f, 0x07, 0xad, 0x36,
	0x85, 0x77, 0xc7, 0xd9, 0xb6, 0x56, 0x63, 0xaf, 0xf1, 0x6e, 0x04, 0xfd, 0x02, 0x3c, 0xf2, 0x99,
	0xd1, 0x8e, 0xd7, 0xf6, 0x3a, 0x4e, 0xae, 0x7d, 0xf3, 0xfc, 0xe6, 0xdf, 0x6f, 0x66, 0x67, 0x76,
	0x0d, 0xb5, 0x28, 0x74, 0x7b, 0x61, 0x24, 0x94, 0x20, 0xe5, 0x70, 0xd6, 0x79, 0x75, 0x27, 0xc4,
	0xdd, 0x82, 0x9f, 0x20, 0x32, 0x5b, 0xde, 0x9e, 0x70, 0x3f, 0x54, 0x8f, 0xb1, 0x41, 0xa7, 0xe1,
	0x0a, 0xdf, 0x17, 0x41, 0x2c, 0xd1, 0x2f, 0x61, 0x77, 0xc2, 0xd5, 0xd9, 0x42, 0xb8, 0x0f, 0x8c,
	0xff, 0xb5, 0xe4, 0x52, 0x11, 0x02, 0x95, 0x5f, 0x1d, 0x79, 0xdf, 0x2e, 0x75, 0x4b, 0xc7, 0x0d,
	0x86, 0xdf, 0x74, 0x00, 0xad, 0xcc, 0x4c, 0x86, 0x22, 0x90, 0x9c, 0x7c, 0x01, 0xdb, 0x08, 0xa0,
	0x61, 0xbd, 0x5f, 0xeb, 0x85, 0xb3, 0x5e, 0x6c, 0x11, 0xe3, 0xf4, 0x04, 0x3e, 0x9f, 0x70, 0x75,
	0x1d, 0x89, 0x50, 0x48, 0x1e, 0x5d, 0x88, 0x68, 0xba, 0x10, 0xca, 0xca, 0xa2, 0x45, 0x74, 0xae,
	0x30, 0xfc, 0xa6, 0xef, 0xa0, 0xb3, 0xce, 0xc1, 0xe4, 0xeb, 0x40, 0x35, 0x51, 0xb5, 0xcb, 0xdd,
	0xd2, 0x71, 0x93, 0xa5, 0x32, 0xfd, 0xb7, 0x0c, 0xad, 0x71, 0x28, 0xdc, 0xfb, 0xcb, 0xe0, 0x56,
	0x44, 0xbe, 0xa3, 0x3c, 0x11, 0x90, 0xaf, 0x60, 0x5b, 0x07, 0x90, 0xed, 0x52, 0x77, 0xeb, 0xb8,
	0xde, 0xdf, 0xd3, 0x04, 0x35, 0x60, 0xd9, 0xb0, 0xd8, 0x22, 0x65, 0xb3, 0xd5, 0x2d, 0x1d, 0x6f,
	0xc5, 0x6c, 0xc8, 0x37, 0xf0, 0x12, 0x43, 0x9e, 0x89, 0x65, 0x30, 0x77, 0xa2, 0x47, 0x26, 0x84,
	0x6a, 0x57, 0xb0, 0x29, 0x45, 0x05, 0xf9, 0x01, 0x5a, 0x1f, 0x1c, 0xc5, 0xa5, 0x3a, 0x8f, 0x84,
	0x94, 0x0b, 0x2f, 0x78, 0x90, 0xed, 0x6d, 0xcc, 0xdb, 0xd4, 0x79, 0x53, 0x94, 0x15, 0xcc, 0xc8,
	0x1b, 0x68, 0xbe, 0x5f, 0x4a, 0xe5, 0xdd, 0x7a, 0x7c, 0x8e, 0x2c, 0x76, 0xb0, 0x27, 0x79, 0x30,
	0x67, 0x85, 0xe7, 0xf3, 0x02, 0xa9, 0xe4, 0x41, 0xfa, 0x37, 0xec, 0xae, 0x94, 0x98, 0xeb, 0x74,
	0x52, 0x5b, 0x1f, 0xe0, 0x5c, 0xf8, 0xbe, 0xa7, 0x14, 0xe7, 0xb2, 0x5d, 0x46, 0x9e, 0x04, 0xfb,
	0x73, 0xef, 0x44, 0xf3, 0x54, 0xc5, 0x2c, 0x2b, 0x72, 0x08, 0x35, 0xd3, 0xef, 0x61, 0xdc, 0xa8,
	0x0a, 0xcb, 0x00, 0xda, 0x03, 0x32, 0xf2, 0xa4, 0x2b, 0x82, 0x80, 0xbb, 0xd9, 0x99, 0xb5, 0xe1,
	0xc5, 0x74, 0xe9, 0xba, 0x5c, 0x4a, 0x4c, 0x5f, 0x65, 0x89, 0x48, 0xbf, 0x83, 0x57, 0x13, 0xae,
	0xb2, 0xf0, 0xcf, 0x18, 0x8f, 0x11, 0x74, 0x27, 0x5c, 0xe9, 0xcf, 0x61, 0x30, 0x47, 0xa2, 0x43,
	0x29, 0xbd, 0xbb, 0xc0, 0xe7, 0x41, 0xea, 0xd7, 0x85, 0xfa, 0x9f, 0xce, 0xc2, 0x9b, 0x3b, 0x4a,
	0x44, 0x97, 0x23, 0x74, 0x6f, 0x32, 0x1b, 0xa2, 0x73, 0x38, 0x58, 0x1f, 0x02, 0xc9, 0x6a, 0x28,
	0xf5, 0x4b, 0xc4, 0x94, 0x4d, 0x39, 0x63, 0x43, 0x0e, 0xa1, 0xc2, 0xc4, 0x82, 0x63, 0x27, 0x3e,
	0xed, 0x57, 0x75, 0xf3, 0xb4, 0xcc, 0x10, 0xa5, 0xa7, 0x40, 0xa6, 0xcb, 0x99, 0xef, 0xe5, 0x57,
	0xeb, 0xc9, 0x95, 0x19, 0xc0, 0x5e, 0xce, 0xcd, 0xb4, 0xf1, 0x10, 0x6a, 0x08, 0x58, 0x7b, 0x99,
	0x01, 0x94, 0x01, 0xd1, 0x8c, 0x7e, 0x5f, 0xfa, 0x33, 0x1e, 0xa5, 0x3e, 0x47, 0x00, 0x19, 0x6a,
	0xfa, 0x68, 0x21, 0xf9, 0x98, 0xe5, 0xd5, 0x98, 0xa7, 0xb0, 0x97, 0x2c, 0xbc, 0x96, 0x93, 0x02,
	0x9e, 0x08, 0x4a, 0xdf, 0xc2, 0x7e, 0xde, 0xcd, 0x90, 0x59, 0x77, 0xa7, 0xf4, 0x71, 0xdb, 0xd3,
	0xa3, 0x19, 0xaa, 0xcb, 0x60, 0xce, 0xff, 0x49, 0x32, 0xed, 0xc3, 0x36, 0xca, 0xe6, 0x28, 0x62,
	0x81, 0xbe, 0xc7, 0xa9, 0x29, 0xfa, 0x98, 0x34, 0x5f, 0x43, 0x2d, 0xd5, 0x99, 0x1e, 0xe3, 0xf6,
	0xa5, 0x20, 0xcb, 0xf4, 0xf4, 0x0f, 0x78, 0x6d, 0x4f, 0x60, 0xaa, 0x90, 0xcf, 0x2c, 0x56, 0x53,
	0xc4, 0x01, 0x31, 0xb7, 0x51, 0x2c, 0x98, 0xab, 0x72, 0xaa, 0x1c, 0xc5, 0xed, 0xab, 0x52, 0x6a,
	0xc0, 0x3e, 0xf7, 0xd8, 0x22, 0xc6, 0xe9, 0xf7, 0xd8, 0xb7, 0x18, 0x12, 0xd6, 0x9d, 0x77, 0x08,
	0xb5, 0x14, 0x4c, 0x0e, 0x3e, 0x05, 0xe8, 0x15, 0x1c, 0x6d, 0xaa, 0xc0, 0xf8, 0x7f, 0x0b, 0x90,
	0xa1, 0xe6, 0x1e, 0x5c, 0xe9, 0x88, 0x65, 0x40, 0x2f, 0xe0, 0xcd, 0xda, 0x80, 0x97, 0xc1, 0xdc,
	0x73, 0xb9, 0xb4, 0x67, 0x6b, 0x25, 0x6c, 0xd3, 0x8e, 0xf3, 0x96, 0xc6, 0xbb, 0x41, 0x1a, 0x50,
	0x1d, 0xde, 0xdc, 0x8c, 0xa7, 0x37, 0x63, 0xd6, 0xfa, 0x44, 0x4b, 0xd7, 0xec, 0xea, 0xfa, 0x6a,
	0x3a, 0x66, 0xad, 0x52, 0xff, 0xbf, 0x1d, 0x68, 0xe2, 0xa0, 0xb8, 0xf7, 0x8e, 0x17, 0xb0, 0xeb,
	0x73, 0xf2, 0x13, 0xd4, 0xad, 0xe1, 0x27, 0x07, 0xd8, 0xa5, 0xc2, 0x12, 0x75, 0x3e, 0x2b, 0xe0,
	0x86, 0xd5, 0xcf, 0xd0, 0x34, 0xf7, 0x83, 0x39, 0xa0, 0x83, 0x5e, 0xfc, 0x10, 0xf6, 0x92, 0x87,
	0xb0, 0x37, 0xd6, 0x0f, 0x61, 0xe7, 0x20, 0x79, 0x09, 0x56, 0x56, 0x66, 0x08, 0x0d, 0x7b, 0x7a,
	0x09, 0x66, 0x5a, 0xb3, 0x06, 0x9d, 0x76, 0x51, 0x61, 0x42, 0x8c, 0xf0, 0xf4, 0x3f, 0x38, 0xd2,
	0x0a, 0xb3, 0x89, 0xc6, 0xe6, 0x28, 0xef, 0xa0, 0x9a, 0x8c, 0xc3, 0x46, 0xef, 0x7d, 0xe3, 0x9d,
	0x9f, 0xb4, 0x5f, 0xb0, 0x84, 0x74, 0x44, 0x9e, 0xcc, 0x5d, 0x1c, 0xb9, 0x73, 0xdc, 0xfc, 0xc2,
	0x63, 0xfa, 0x51, 0x1a, 0x05, 0xeb, 0x01, 0xd4, 0x27, 0x5c, 0x5d, 0x88, 0xe8, 0x61, 0xe4, 0x28,
	0x67, 0xa3, 0x73, 0x43, 0x3b, 0xa7, 0x56, 0x53, 0x20, 0xc5, 0xe7, 0x9f, 0xbc, 0x36, 0x4c, 0xd7,
	0xff, 0x47, 0x74, 0x8e, 0x36, 0xa9, 0x4d, 0x39, 0xa7, 0xd8, 0xca, 0x78, 0xa2, 0xf6, 0xec, 0x86,
	0x27, 0x01, 0xf6, 0xf3, 0xa0, 0x71, 0xfb, 0x11, 0x5e, 0xc6, 0x23, 0x36, 0x54, 0xfa, 0xb5, 0x8e,
	0xab, 0xda, 0xd5, 0xa6, 0x16, 0xd0, 0xd9, 0x50, 0x17, 0x19, 0x00, 0x4c, 0xb8, 0xfa, 0x8d, 0xfb,
	0xa1, 0x10, 0x8b, 0x8d, 0xd5, 0x37, 0xd3, 0xeb, 0xff, 0x4c, 0xcc, 0x1f, 0x67, 0x3b, 0xa8, 0x1e,
	0xfc, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x32, 0x7a, 0xf3, 0x09, 0xcd, 0x09, 0x00, 0x00,
}
